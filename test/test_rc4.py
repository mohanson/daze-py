import pydaze

source = """52fdfc072182654f163f5f0f9a621d729566c74d10037c4d7bbb0407d1e2c64981855ad8681d0d86d1e91e00167939cb6694d2c422a\
cd208a0072939487f6999eb9d18a44784045d87f3c67cf22746e995af5a25367951baa2ff6cd471c483f15fb90badb37c5821b6d95526a41a950468\
0b4e7c8b763a1b1d49d4955c8486216325253fec738dd7a9e28bf921119c160f0702448615bbda08313f6a8eb668d20bf5059875921e668a5bdf2c7\
fc4844592d2572bcd0668d2d6c52f5054e2d0836bf84c7174cb7476364cc3dbd968b0f7172ed85794bb358b0c3b525da1786f9fff094279db1944eb\
d7a19d0f7bbacbe0255aa5b7d44bec40f84c892b9bffd43629b0223beea5f4f74391f445d15afd4294040374f6924b98cbf8713f8d962d7c8d01919\
2c24224e2cafccae3a61fb586b14323a6bc8f9e7df1d929333ff993933bea6f5b3af6de0374366c4719e43a1b067d89bc7f01f1f573981659a44ff1\
7a4c7215a3b539eb1e5849c6077dbb5722f5717a289a266f97647981998ebea89c0b4b373970115e82ed6f4125c8fa7311e4d7defa922daae778666\
7f7e936cd4f24abf7df866baa56038367ad6145de1ee8f4a8b0993ebdf8883a0ad8be9c3978b04883e56a156a8de563afa467d49dec6a40e9a1d007\
f033c2823061bdd0eaa59f8e4da6430105220d0b29688b734b8ea0f3ca9936e8461f10d77c96ea80a7a665f606f6a63b7f3dfd2567c18979e4d60f2\
6686d9bf2fb26c901ff354cde1607ee294b39f32b7c7822ba64f84ab43ca0c6e6b91c1fd3be8990434179d3af4491a369012db92d184fc39d1734ff\
5716428953bb6865fcf92b0c3a17c9028be9914eb7649c6c9347800979d1830356f2a54c3deab2a4b4475d63afbe8fb56987c77f5818526f1814be8\
23350eab13935f31d84484517e924aef78ae151c00755925836b7075885650c30ec29a3703934bf50a28da102975deda77e758579ea3dfe4136abf7\
52b3b8271d03e944b3c9db366b75045f8efd69d22ae5411947cb553d7694267aef4ebcea406b32d6108bd68584f57e37caac6e33feaa3263a399437\
024ba9c9b14678a274f01a910ae295f6efbfe5f5abf44ccde263b5606633e2bf0006f28295d7d39069f01a239c4365854c3af7f6b41d631f92b9a8d\
12f41257325fff332f7576b0620556304a3e3eae14c28d0cea39d2901a52720da85ca1e4b38eaf3f44c6c6ef8362f2f54fc00e09d6fc25640854c15\
dfcacaa8a2cecce5a3aba53ab705b18db94b4d338a5143e63408d8724b0cf3fae17a3f79be1072fb63c35d6042c4160f38ee9e2a9f3fb4ffb0019b4\
54d522b5ffa17604193fb8966710a7960732ca52cf53c3f520c889b79bf504cfb57c7601232d589baccea9d6e263e25c27741d3f6c62cbbb15d9afb\
cbf7f7da41ab0408e3969c2e2cdcf233438bf"""
cipher = """b30b5845eca4ce4a0d8f5e2c904a325582be050ef02b19b568589a09f4fa900cbc18bab41b643f7f1af9cfeb344b079c29c7d53c90a\
14b2cb86f29be46d2903483a1dc602f804285cb7ee27df8452a7bda586a83382b1192c788527c0ec015741abe13b78c0a6b30f981ef0ef3692a6ada\
ef0cafb3abf13cf25069873a9428f1"""
expect = """b67233a349e868ffdf02f7fa6e17b2f051c600e709712b895fc1efffad2a7f1a945c7b76f0565f9f52b6ba28d695c3a25b6e34f9b20\
84d5302db7947c946ae86d9c1563cdb98c049d7a71ec0e01cba6a84a72100afe044c83a631bee3580a5fb78b33884703f6ff5826ed2771b25928596\
642a0ee726abc6c60fb1f5728c5a40ca172a21ae93cc677249eca4a0cab8be0f3fdf46b9d54cf2c7aaa301875f3df109a26c2d586cbdc421c4aba76\
bdb267509bcbe41d9f9e576759d3a92462230af8c01bb126f2612d3b53145052831102e2912db2228d0aa934e6b832a2a0e0641801c547863a0b30b\
cecf2411e0dca473595391deddb2f2e862eb80a64925b682f6c09f93ac75801a86ae71a85fc078c0e64912ea726f2e4d1078e1081e55e0abcc1398d\
066f350da85fba3188121d211b15e37573a794db5606944e0b20a691ecf8d996118101f58d2f92c3cdeea33a8059efef5a7ffc82f32474663aedbcf\
97ffa708f4cdb6d76dd13af073c6f8367a1e3a79e448233a4fef1f36ba7d51bf2812de8affd7a2571c149a75ec288443dcc9f728a3ae1c825b4eeb5\
06fbf293bc03b55181a83da6ec9d137281e5506432b8db1ea1f84fe7629080c4982830fd0b11fdcba45377dacebcc2cd2326c967c4c4734e6af18b3\
197722fc012d29cb68dfbac7442c9eee67dcb28f4db95f9c6b2b6f72dc73ed7e0362fc3c145d35d815c747d6686e751105e692acd5161138a4be7ac\
4080db6710f9dd9ab891eb9670e3f3759944561a25c22637133cc796badaf3645c0cf28c1c6bbf7855b2b8b1cd35e5739d9ce01c0625730b9b78e7e\
68d6fd16fc295475720eb101974619701259f0ff1bc429ac9443ddb789bf5ff57423650cb32c73de55a26d42254ed044cb526879a70b78cfcb02503\
f47ed397d2fa838ff071b8ce55e9d6aff0157fd8f02d9b47a8b05ea37d24e77fa164fd7fdeae34ea88081a86ce5b9faffd8399fbfab0aaf4647c34f\
b80957e2c9d7bf9a9e9090174643e5b7294f80485d5541a867cda9997b8d984eb33cfc04b90b110726034c3198d306ed389080d10766114fd238bb9\
e8050a1ffb9725d47ad033c7e0d5c45dc12928e23001e52a72d05c3943917c9ad2ef336ef30e30e284d8c25d11fd74d876b28b7dd939b34cde9e890\
cddde8b48a0e08dda378b65ae034dc50b8f71343721c285f06ec5c4f399d507c55988a54d10dc58b00b7361ad8d52756ab859059ececc79e0a305a3\
54c0ffbb53af1dc86a79193018e2b0877a12b1d8aade82bb285c7330beef08743f41be975e4b4e1bfa11842ef4b85178b622e9fadfaac0f77dbf478\
ffd452ec2521535733fb06baf43bef99364a325e5a62a668b1bd9ccaea13b3c46fe986ca5de629fef0296b4829d7515cfe84be8e40cdd3e06e0eb00\
0e01abe6949481c61b2bdb38710a9df6b561a"""


def test_rc4():
    c = pydaze.rc4.Cipher(bytearray.fromhex(cipher))
    src = bytearray.fromhex(source)
    dst = bytearray(len(src))
    c.crypto(src, dst)
    assert dst == bytearray.fromhex(expect)


if __name__ == '__main__':
    test_rc4()
